{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/chadang/src/components/Calendar.js\";\nimport React from \"react\";\nimport Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css'; // If you use the default popups, use this.\n\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\n\nclass TestCal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickNextButton = () => {\n      const calendarInstance = this.calendarRef.current.getInstance();\n      calendarInstance.next();\n    };\n\n    this.weekChangeButton = () => {\n      const calendarInstance = this.calendarRef.current.getInstance();\n      calendarInstance.changeView('week', true);\n    };\n\n    this.handleClickDayname = ev => {\n      console.group('onClickDayname');\n      console.log(ev.date);\n      console.groupEnd();\n    };\n\n    this.beforeCreateSchedule = ev => {\n      console.group('onbeforeCreateSchedule');\n      console.log(ev.date);\n      console.groupEnd();\n    };\n\n    this.calendarRef = /*#__PURE__*/React.createRef();\n  } // ---------- Instance method ---------- //\n  // 다음 주로 이동하는 버튼\n\n\n  render() {\n    const selectedView = 'month'; // default view\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        ref: this.calendarRef,\n        onClickDayname: this.handleClickDayname,\n        onbeforeCreateSchedule: this.beforeCreateSchedule,\n        height: \"95vh\",\n        calendars: [],\n        disableDblClick: true,\n        disableClick: false,\n        isReadOnly: false,\n        schedules: [],\n        scheduleView: true,\n        taskView: true,\n        template: {\n          milestone(schedule) {\n            return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${schedule.title}</span>`;\n          },\n\n          milestoneTitle() {\n            return 'Milestone';\n          },\n\n          allday(schedule) {\n            return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\n          },\n\n          alldayTitle() {\n            return 'All Day';\n          }\n\n        },\n        theme: \"\" // 어두운 테마 사용가능\n        ,\n        timezones: [{\n          timezoneOffset: 540,\n          displayLabel: 'GMT+09:00',\n          tooltip: 'Seoul'\n        }],\n        useDetailPopup: true,\n        useCreationPopup: true,\n        view: selectedView // You can also set the `defaultView` option.\n        ,\n        week: {\n          daynames: ['일', '월', '화', '수', '목', '금', '토'],\n          showTimezoneCollapseButton: true,\n          timezonesCollapsed: true\n        },\n        month: {\n          daynames: ['일', '월', '화', '수', '목', '금', '토'] //narrowWeekend: true // 토, 일은 사이즈 작게\n\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction Filter(params) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC804\\uCCB4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC6B4\\uD589\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC608\\uC57D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uBC18\\uB0A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uB2E8\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC6D4\\uCC28\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC7A5\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC790\\uCC28\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uB300\\uBB3C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uAE30\\uD0C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Filter;\nexport default TestCal; // https://blog.naver.com/skfkgkdlaos/221800247519\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/chadang/src/components/Calendar.js"],"names":["React","Calendar","TestCal","Component","constructor","props","handleClickNextButton","calendarInstance","calendarRef","current","getInstance","next","weekChangeButton","changeView","handleClickDayname","ev","console","group","log","date","groupEnd","beforeCreateSchedule","createRef","render","selectedView","milestone","schedule","bgColor","title","milestoneTitle","allday","alldayTitle","timezoneOffset","displayLabel","tooltip","daynames","showTimezoneCollapseButton","timezonesCollapsed","Filter","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Calendar from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\n\n// If you use the default popups, use this.\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\n\nclass TestCal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.calendarRef = React.createRef();\n    }\n  \n    // ---------- Instance method ---------- //\n\n    // 다음 주로 이동하는 버튼\n    handleClickNextButton = () => {\n        const calendarInstance = this.calendarRef.current.getInstance();\n  \n        calendarInstance.next();\n    };\n\n    // 한 주 스케줄 보기    ( defaultView = month 로 수정해놓았습니다 )\n    weekChangeButton = () => {\n        const calendarInstance = this.calendarRef.current.getInstance();\n\n        calendarInstance.changeView('week', true);\n    }\n\n\n    // ---------- Event ---------- //\n\n    // week 상태에서 요일 클릭\n    handleClickDayname = (ev) => {\n        console.group('onClickDayname');\n        console.log(ev.date);\n        console.groupEnd();\n    };\n\n    beforeCreateSchedule = (ev) => {\n        console.group('onbeforeCreateSchedule');\n        console.log(ev.date);\n        console.groupEnd();\n        \n    }\n\n    render() {\n        const selectedView = 'month';     // default view\n          \n        return (\n          <>\n          <Filter/>\n            <Calendar\n                ref={this.calendarRef}\n                onClickDayname={this.handleClickDayname}\n                onbeforeCreateSchedule={this.beforeCreateSchedule}\n                height='95vh'\n                calendars={[\n\n                ]}\n                disableDblClick={true}\n                disableClick={false}\n                isReadOnly={false}\n                schedules={[\n\n                ]}\n                scheduleView\n                taskView\n                template={{\n                  milestone(schedule) {\n                    return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${\n                      schedule.title\n                    }</span>`;\n                  },\n                  milestoneTitle() {\n                    return 'Milestone';\n                  },\n                  allday(schedule) {\n                    return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\n                  },\n                  alldayTitle() {\n                    return 'All Day';\n                  }\n                }}\n                theme='' // 어두운 테마 사용가능\n                timezones={[\n                  {\n                    timezoneOffset: 540,\n                    displayLabel: 'GMT+09:00',\n                    tooltip: 'Seoul'\n                  }\n                ]}\n                useDetailPopup\n                useCreationPopup\n                view={selectedView} // You can also set the `defaultView` option.\n                week={{\n                    daynames: ['일', '월', '화', '수', '목', '금', '토'],\n                    showTimezoneCollapseButton: true,\n                    timezonesCollapsed: true\n                }}\n                month={{\n                  daynames: ['일', '월', '화', '수', '목', '금', '토']\n                  //narrowWeekend: true // 토, 일은 사이즈 작게\n                }}\n            />\n            {/* <button onClick={this.handleClickNextButton}>Go next!</button>\n            <button onClick={this.weekChangeButton}>Week</button> */}\n          </>\n        );\n    }\n}\n\nfunction Filter(params) {\n  return (\n    <div className=\"filter\">\n        <button>전체</button>\n        <button>운행</button>\n        <button>예약</button>\n        <button>반납</button>\n        <button>단기</button>\n        <button>월차</button>\n        <button>장기</button>\n        <button>자차</button>\n        <button>대물</button>\n        <button>기타</button>\n    </div>\n\n)\n}\n\n\nexport default TestCal;\n\n// https://blog.naver.com/skfkgkdlaos/221800247519"]},"metadata":{},"sourceType":"module"}